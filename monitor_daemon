#!/usr/bin/php -q

<?php

require_once "vendor/autoload.php";
require_once "lib/System/Daemon.php";

use App\Effectors\DiskEffector;
use App\Effectors\MemoryEffector;
use App\Utilities\Config;
use App\Repositories\DBRepo;

//Display only errors
error_reporting(E_ERROR);

// Allowed arguments & their defaults
$runmode = array(
    'no-daemon' => false,
    'help' => false,
    'write-initd' => false,
    'no-db' =>  false
);

// Scan command line attributes for allowed arguments
foreach ($argv as $k=>$arg) {
    if (substr($arg, 0, 2) == '--' && isset($runmode[substr($arg, 2)])) {
        $runmode[substr($arg, 2)] = true;
    }
}

$options = array(
    'appName' => 'monitor_daemon',
    //'appDir' => dirname(__FILE__),
    'appDescription' => 'Monitor Server System Resources',
    'authorName' => 'Delali Kanda',
    'authorEmail' => 'delakanda@gmail.com',
    //'sysMaxExecutionTime' => '0',
    //'sysMaxInputTime' => '0',
    //'sysMemoryLimit' => '1024M',
    'appRunAsGID' => 1000,
    'appRunAsUID' => 1000,
);

System_Daemon::setOptions($options);

if (!$runmode['no-daemon']) {
    // Spawn Daemon
    \System_Daemon::start();
}
//operational variables
$runningOkay = true;
$dbOps = true;

//test DB if no-db arg not provided to see if the connection is successful else do not run daemon
if (!$runmode['no-db']) {
    $result = DBRepo::testDBConnection();

    if(!$result) {
        //disable loop
        \System_Daemon::err('DB Connection failed..');
        $runningOkay = false;
    } else {
        \System_Daemon::info('DB Connection Successful...');
    }
} else {
    $dbOps = false;
}

while (!\System_Daemon::isDying() && $runningOkay) {

    $mode = '"'.(\System_Daemon::isInBackground() ? '' : 'non-' ).'daemon" mode';

    $runningOkay = true;

    if (!$runningOkay) {
        \System_Daemon::err('An error occurred, exiting...');
    }

    DiskEffector::execute($dbOps);
    MemoryEffector::execute($dbOps);

    \System_Daemon::iterate(Config::get('pause_interval'));
}

\System_Daemon::stop();
